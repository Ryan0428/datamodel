---
  title: "Selection-predicate"
  description: "Documented Methods"
  sections: 
    - 
      type: "markdown-section"
      content: "SelecitonPredicate\n\nA simple predicate which decides if a row is selected based on some condition or not. If this predicate returns true\nthe current row is labeled as a member of selection set. Similarly if returns false, the current row is labeled as\na memeber of rejection set.\n\nNote: For some cases this funciton does not directly decides whether the row should be present in the final resultant\nDataModel. Based on selection set and rejection set which predicate function helps to decide, MODE determine which\nset should be present in the final DataModel."
    - 
      type: "markdown-section"
      content: "<p class=\"sub-header\">Parameters:</p>\n<table><thead><tr><td>Name</td><td>Type</td><td>Description</td></tr></thead>\n<tr>\n                <td class=\"param-name\">rowInf</td>\n                <td><p>object</p> </td>\n                <td><p>Particular row information presented as object.      When rows are iterated by a operator, all the fields <a href=\"Value\">value</a> present in a row, are combined in a      object. The key of the object is name of field and value is <a href=\"Value\">value</a> of field for that current row.      A typical value of a row is represented by       <code>{          Origin: Value,          Horsepower: Value          ...      }</code>      Number of arguments varies based on no if operands are involved for a operator. Like, for joining two instances      of DataModels are involved, hence two rowInf are passed, one for each DataModel instance. On      the other hand, operators like selection needs only one operands, hence only one rowInf is      passed.</p> </td>\n            </tr>\n<tr>\n                <td class=\"param-name\">rowIndex</td>\n                <td><p>Number</p> </td>\n                <td><p>Index of current iteration of row</p> </td>\n            </tr></table>"
