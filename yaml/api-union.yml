---
  title: "Union"
  description: "Documented Methods"
  sections: 
    - 
      type: "markdown-section"
      content: "DataModel\n\nUnion operation can be termed as vertical stacking of all rows from both the DataModel instances, provided that both\nof the [DataModel](DataModel) instances should have same column names."
    - 
      type: "markdown-section"
      content: "<p class=\"sub-header\">Parameters:</p>\n<table><thead><tr><td>Name</td><td>Type</td><td>Description</td></tr></thead>\n<tr>\n                <td class=\"param-name\">topDM</td>\n                <td><p>DataModel</p> </td>\n                <td><p>One of the two operands of union. Instance of DataModel.</p> </td>\n            </tr>\n<tr>\n                <td class=\"param-name\">bottomDM</td>\n                <td><p>DataModel</p> </td>\n                <td><p>Another operands of union. Instance of DataModel.</p> </td>\n            </tr></table>"
    - 
      type: "code-section"
      content: " Promise.all([loadData('/static/cars.json'), loadData('/static/cars-schema.json')]).then(function (params) {\n const data = params[0];\n const schema = params[1];\n const DataModel = muze.DataModel;\n const dm = new DataModel(data, schema);\n //@preamble_end\n // DataModel instance is created from https://www.charts.com/static/cars.json data,\n // https://www.charts.com/static/cars-schema.json schema and assigned to variable dm. DataModel is extracted from\n // muze namespace and assigned to the variable DataModel.\n\n // Creates two small DataModel instance from the original DataModel instance, one only for european cars,\n // another for cars from USA. Used the chain operation here for conciseness.\n const usaMakerDM = dm.select(fields => fields.Origin.value === 'USA');\n const euroMakerDM = dm.select(fields => fields.Origin.value === 'Europe');\n\n const union = DataModel.Operators.union;\n const outputDM = union(usaMakerDM, euroMakerDM);\n //@preamble_start\n printDM(outputDM);\n });\n //@preamble_end"
      preamble: []
      preambleWithContent: "//@preamble_start\n Promise.all([loadData('/static/cars.json'), loadData('/static/cars-schema.json')]).then(function (params) {\n const data = params[0];\n const schema = params[1];\n const DataModel = muze.DataModel;\n const dm = new DataModel(data, schema);\n //@preamble_end\n // DataModel instance is created from https://www.charts.com/static/cars.json data,\n // https://www.charts.com/static/cars-schema.json schema and assigned to variable dm. DataModel is extracted from\n // muze namespace and assigned to the variable DataModel.\n\n // Creates two small DataModel instance from the original DataModel instance, one only for european cars,\n // another for cars from USA. Used the chain operation here for conciseness.\n const usaMakerDM = dm.select(fields => fields.Origin.value === 'USA');\n const euroMakerDM = dm.select(fields => fields.Origin.value === 'Europe');\n\n const union = DataModel.Operators.union;\n const outputDM = union(usaMakerDM, euroMakerDM);\n //@preamble_start\n printDM(outputDM);\n });\n //@preamble_end"
    - 
      type: "markdown-section"
      content: "<a name=DataModel></a><p class=\"sub-header\">Returns:</p>\n\n <span style=\"font-family: 'Source Code Pro';margin-left: 2%;\">DataModel:</span>New DataModel instance with the result of the operation."
