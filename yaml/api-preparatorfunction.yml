---
  title: "Preparator-function"
  description: "Documented Methods"
  sections: 
    - 
      type: "markdown-section"
      content: "DataModel\n\nAll the functional operators of DataModel works in similar way. They accepts arguments which are specific for a\noperator and returns a function. This function is called PreparatorFunction. This function expects a DataModel\ninstance, performs the oprerator(s) on the instance and return a resultant DataModel instance.\n\n```\n const project = DataModel.operators.project;\n const fn = project(['horsepower', 'miles_per_gallon']); // fn <- preparator function\n fn(dm);\n```"
    - 
      type: "markdown-section"
      content: "<p class=\"sub-header\">Parameters:</p>\n<table><thead><tr><td>Name</td><td>Type</td><td>Description</td></tr></thead>\n<tr>\n                <td class=\"param-name\">target</td>\n                <td><p>DataModel</p> </td>\n                <td><p>Instance of DataModel on which operator has to be applied</p> </td>\n            </tr></table>"
    - 
      type: "markdown-section"
      content: "<a name=DataModel></a><p class=\"sub-header\">Returns:</p>\n\n <span style=\"font-family: 'Source Code Pro';margin-left: 2%;\">DataModel:</span>Resultant instance of DataModel"
