---
  title: "Difference"
  description: "Documented Methods"
  sections: 
    - 
      type: "markdown-section"
      content: "DataModel\n\nDifference operator is written as `(A - B)` where **A** and **B** are instances of [DataModel](DataModel). The result of\n`difference` is an instance of [DataModel](DataModel) which includes tuples which are present in **A** and not in **B**.\nFor `difference` to work schema of both [DataModel](DataModel) has to be same."
    - 
      type: "markdown-section"
      content: "<p class=\"sub-header\">Parameters:</p>\n<table><thead><tr><td>Name</td><td>Type</td><td>Description</td></tr></thead>\n<tr>\n                <td class=\"param-name\">leftDM</td>\n                <td><p>DataModel</p> </td>\n                <td><p>Instance of <a href=\"DataModel\">DataModel</a> from which the difference will be calculated. For the      notation <code>(A - B)</code>, <strong>A</strong> is the leftDM</p> </td>\n            </tr>\n<tr>\n                <td class=\"param-name\">rightDM</td>\n                <td><p>DataModel</p> </td>\n                <td><p>Instance of <a href=\"DataModel\">DataModel</a> which will be used to calculate the difference from the      leftDM. For the notation <code>(A - B)</code>, <strong>B</strong> is the rightDM.</p> </td>\n            </tr></table>"
    - 
      type: "code-section"
      content: " Promise.all([loadData('/static/cars.json'), loadData('/static/cars-schema.json')]).then(function (params) {\n     const data = params[0];\n     const schema = params[1];\n     const DataModel = muze.DataModel;\n     const dm = new DataModel(data, schema);\n //@preamble_end\n // DataModel instance is created from https://www.charts.com/static/cars.json data,\n // https://www.charts.com/static/cars-schema.json schema and assigned to variable dm. DataModel is extracted from\n // muze namespace and assigned to the variable DataModel.\n\n // Creates a DataModel instance only including USA. Using chained version for conciseness.\n const usaMakerDM = dm.select(fields => fields.Origin.value === 'USA');\n\n const difference = DataModel.Operators.difference;\n outputDM = difference(dm, usaMakerDM);\n //@preamble_start\n printDM(outputDM);\n });\n //@preamble_end"
      preamble: []
      preambleWithContent: "//@preamble_start\n Promise.all([loadData('/static/cars.json'), loadData('/static/cars-schema.json')]).then(function (params) {\n     const data = params[0];\n     const schema = params[1];\n     const DataModel = muze.DataModel;\n     const dm = new DataModel(data, schema);\n //@preamble_end\n // DataModel instance is created from https://www.charts.com/static/cars.json data,\n // https://www.charts.com/static/cars-schema.json schema and assigned to variable dm. DataModel is extracted from\n // muze namespace and assigned to the variable DataModel.\n\n // Creates a DataModel instance only including USA. Using chained version for conciseness.\n const usaMakerDM = dm.select(fields => fields.Origin.value === 'USA');\n\n const difference = DataModel.Operators.difference;\n outputDM = difference(dm, usaMakerDM);\n //@preamble_start\n printDM(outputDM);\n });\n //@preamble_end"
    - 
      type: "markdown-section"
      content: "<a name=DataModel></a><p class=\"sub-header\">Returns:</p>\n\n <span style=\"font-family: 'Source Code Pro';margin-left: 2%;\">DataModel:</span>New [DataModel](DataModel) instance with the result of the operation."
